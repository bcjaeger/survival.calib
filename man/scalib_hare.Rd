% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scalib_hare.R
\name{scalib_hare}
\alias{scalib_hare}
\title{Calibration Slope using Hazard Regression (HARE)}
\usage{
scalib_hare(
  scalib_object,
  verbose = 0,
  hare_penalty = NULL,
  hare_max_dimension = NULL,
  hare_prophaz = FALSE,
  hare_additive = FALSE,
  hare_linear_risk = FALSE,
  hare_linear_time = FALSE,
  hare_fit = NULL
)
}
\arguments{
\item{scalib_object}{An object of class \code{scalib}
(see \link{scalib}).}

\item{verbose}{(\emph{integer value}) If 0, no output will be printed.
If 1, some output will be printed. If 2, \emph{all} output will be printed.}

\item{hare_penalty}{the parameter to be used in the AIC criterion. The method chooses the number of knots that minimizes \code{-2 * loglikelihood + penalty * (dimension)}. The default is to use penalty = log(samplesize) as in BIC. The effect of this parameter is summarized in \link[polspline:summary.hare]{summary.hare.}}

\item{hare_max_dimension}{maximum dimension (default is \verb{6 * length(data)^0.2.}}

\item{hare_prophaz}{should the model selection be restricted to proportional hazards models?}

\item{hare_additive}{should the model selection be restricted to additive models?}

\item{hare_linear_risk}{(\emph{logical value}) should the effect of risk be linear?}

\item{hare_linear_time}{(\emph{logical value}) should the effect of time be linear?}

\item{hare_fit}{\link[polspline:hare]{hare} object. If \code{fit} is specified, \link[polspline:hare]{hare} adds basis functions starting with those in fit.}
}
\value{
an object of class \link{scalib}
}
\description{
TODO: add description
}
\examples{

# packages
library(riskRegression)
library(survival)
library(ggplot2)

# set index for training data
set.seed(329)

model_data <- na.omit(flchain)

train_index <- sample(nrow(model_data), size = 1000)

# fit cox PH model using train data
risk_mdl <- coxph(
  data = model_data[train_index, ],
  x = TRUE,
  formula = Surv(futime, death) ~ .
)

# set time of prediction
time_predict <- 1500

# predict risk in the testing data
risk_pred <- predictRisk(risk_mdl,
                         newdata = model_data[-train_index, ],
                         times = time_predict)

calslope_hare <- calib_slope_hare(
  predicted_risk = risk_pred,
  event_status = model_data$death[-train_index],
  event_time = model_data$futime[-train_index],
  time_predict = time_predict,
  verbose = 2
)

calslope_hare

ggplot(calslope_hare$slope) +
  aes(x = predicted, y = observed) +
  geom_line() +
  geom_abline(col = 'red', linetype = 2) +
  geom_hline(yintercept = 0, col = 'grey') +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_cartesian(xlim = c(0, 1),
                  ylim = c(-0.1, 1)) +
  geom_segment(data = calslope_hare$bins,
               size = 2,
               mapping = aes(x = x,
                             y = y,
                             xend = xend,
                             yend = yend,
                             color = factor(event_status)))
}
