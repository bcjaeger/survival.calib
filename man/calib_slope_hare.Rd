% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calib_slope_hare.R
\name{calib_slope_hare}
\alias{calib_slope_hare}
\title{Calibration Slope using Hazard Regression (HARE)}
\usage{
calib_slope_hare(
  predicted_risk,
  event_status,
  event_time,
  time_predict,
  verbose = 0
)
}
\arguments{
\item{predicted_risk}{(\emph{numeric vector}) predicted risk values for the
event of interest at or before a given time.}

\item{event_status}{(\emph{numeric vector}) observed event status. The values
of this vector should be 0 (event censored) and 1 (event observed).}

\item{event_time}{(\emph{numeric vector}) observed event times}

\item{time_predict}{(\emph{numeric value}) the time of risk prediction.}

\item{verbose}{(\emph{integer value}) If 0, no output will be printed.
If 1, some details will be printed. If 2, all details will be printed.}
}
\value{
an object of class 'survival_calib_slope'
}
\description{
Calibration Slope using Hazard Regression (HARE)
}
\examples{

# packages
library(riskRegression)
library(survival)
library(ggplot2)

# set index for training data
set.seed(329)

model_data <- na.omit(flchain)

train_index <- sample(nrow(model_data), size = 1000)

# fit cox PH model using train data
risk_mdl <- coxph(
  data = model_data[train_index, ],
  x = TRUE,
  formula = Surv(futime, death) ~ .
)

# set time of prediction
time_predict <- 1500

# predict risk in the testing data
risk_pred <- predictRisk(risk_mdl,
                         newdata = model_data[-train_index, ],
                         times = time_predict)

calslope_hare <- calib_slope_hare(
  predicted_risk = risk_pred,
  event_status = model_data$death[-train_index],
  event_time = model_data$futime[-train_index],
  time_predict = time_predict,
  verbose = 2
)

calslope_hare

ggplot(calslope_hare$slope) +
  aes(x = predicted, y = observed) +
  geom_line() +
  geom_abline(col = 'red', linetype = 2) +
  geom_hline(yintercept = 0, col = 'grey') +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_cartesian(xlim = c(0, 1),
                  ylim = c(-0.1, 1)) +
  geom_segment(data = calslope_hare$bins,
               size = 2,
               mapping = aes(x = x,
                             y = y,
                             xend = xend,
                             yend = yend,
                             color = factor(event_status)))
}
